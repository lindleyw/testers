-- 1 down

DROP TABLE IF EXISTS releases;
DROP INDEX IF EXISTS release_idx;
DROP TABLE IF EXISTS module_flags;
DROP INDEX IF EXISTS module_flags_idx;
DROP TABLE IF EXISTS environments;
DROP INDEX IF EXISTS environment_idx;
DROP TABLE IF EXISTS tests;

-- 1 up

CREATE TABLE releases (
                      id INTEGER PRIMARY KEY,
                      name TEXT NOT NULL,         -- e.g., 'Mojolicious-7.60'
                      version TEXT NOT NULL,      -- e.g., '7.60' NOTE: Freeform text!
                      released TIMESTAMP,  -- version timestamp
                      author TEXT NOT NULL,
                      download_url TEXT,
                      disabled_by TEXT,
                      added TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                      UNIQUE (name, version) ON CONFLICT IGNORE
                    );

CREATE UNIQUE INDEX release_idx ON releases (name, version);

-- For storing the complex regexps that will be applied to module names,
-- thereby determining which modules are enabled and disabled.

CREATE TABLE module_flags (
                           id INTEGER PRIMARY KEY,
                           priority INTEGER, -- lower values take higher precedence
                           disable  INTEGER, -- enable (0) or disable (1) the modules in the regex
                           origin TEXT,  -- URL or filename
                           regex  TEXT,  -- Regular expression to match module names against
                           author TEXT,  -- PAUSE identifier
                           added TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                          );

CREATE UNIQUE INDEX module_flags_idx ON module_flags (origin);

CREATE TABLE environments (
                           id INTEGER PRIMARY KEY,
                           host TEXT,         -- Hostname (preferably full name; 'localhost' is less helpful)
                           perlbrew TEXT,     -- Version name we pass to Perlbrew
                           -- These (platform, perl, osname, osvers) match fields in Testers Metabase
                           -- See https://github.com/barbie/cpan-testers-data-generator/
                           platform   TEXT,   
                           perl       TEXT,   -- Perl version, $Config{version}
                           osname     TEXT,   -- from $Config{osname}
                           osvers     TEXT,   -- $Config{osvers}
                           archname   TEXT,   -- $Config{archname}
                           added TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                           );

CREATE UNIQUE INDEX environment_idx ON environments (host, perlbrew);

CREATE TABLE tests (
                    id INTEGER PRIMARY KEY,
                    release_id INTEGER,       -- UUT [unit under test]
                    environment_id INTEGER,   -- replaces perl_build
                    -- Data from TestModule:
                    start_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- when testing began (was enqueued)
                    elapsed_time REAL,
                    build_log TEXT,
                    report TEXT,
                    grade TEXT,
                    test_command TEXT,
                    test_error TEXT,
                    reporter_command TEXT,
                    reporter_error TEXT,
                    report_sent TIMESTAMP,      -- When submitted to remote
                    FOREIGN KEY(release_id) REFERENCES releases(id),
                    FOREIGN KEY(environment_id) REFERENCES environments(id)
);

-- 2 up

ALTER TABLE releases ADD COLUMN distribution TEXT;      -- e.g., 'Mojo::Pg'
