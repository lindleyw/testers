{
 dbname => 'testers.db' ,
 db_api => { # reports get POSTed here:
             submit_url => 'http://api.cpantesters.org/v3/report', 
                           # 'http://rackbox:3000/v3/report',   # locally hosted test
	     user_agent => 'Smoketest/0.01',
           },
 cpan => { 
          # For downloading individual files (e.g., distroprefs) from CPAN source
          # http://search.cpan.org links to 'http://cpansearch.perl.org/src/'
          # Alternately:
          # http://metacpan.org links to 'https://st.aticpan.org/source/'
          source  => 'http://cpansearch.perl.org/src/',
          # YAML file containing list of modules to be disabled;
          # exists under {author}/CPAN-{version}/distroprefs/ in the
          # source.
          disable => '01.DISABLED.yml',

          # For downloading the full, or most-recent-list of modules.
          testers => 'http://cpan.org/',
          # Which file contains the list of modules?
          #    '02packages.details.txt'  Faster update loop, no version release dates
          all => '02packages.details.txt',
          # File containing list of most-recently added/updated modules
          # Could also use:  http://www.cpan.org/authors/RECENT.recent  (YAML)
          #    '01modules.index.html'    Version release dates, slower DOM-based loop
          recent => '01modules.mtime.html',

          # MetaCPAN API
          metacpan => { release => 'https://fastapi.metacpan.org/v1/release',
                        module => 'https://fastapi.metacpan.org/v1/module',
                      },

          cpantesters_static => 'http://www.cpantesters.org/static/distro/',
         },
  smoker => { perlbrew => 'perlbrew exec --with',
                       # NOTE: default perlbrew command is shown above. The
                       # command always gets appended with the perlbrew version
                       # desired. In the case of the default environment
                       # (whatever `system("perl")` would run), this perlbrew
                       # parameter is not used.
              cpanm_test => 'cpanm --test-only',
                         # NOTE: cpanm has timeout parameters, but
                         # these apply to each dependency, not to the
                         # whole process, so are unsuitable arguments
                         # for our purposes:
                         #
                         # '--configure-timeout 5 --build-timeout 5 --test-timeout 5',
                         #
              timeout => 5,
                      # NOTE: timeout, if defined, will set an alarm()
                      # for each test performed. A timeout notation
                      # will be saved in the event the alarm expires.
              local_lib => '/tmp/perl_libs',
                        # NOTE: local_lib, if set, will cause the
                        # cpanm_test command shown above to be
                        # prefixed by '-L' and this value.
         },

}
;
